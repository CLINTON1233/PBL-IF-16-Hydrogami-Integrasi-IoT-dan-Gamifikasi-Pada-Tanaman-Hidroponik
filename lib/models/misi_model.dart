class Misi {
  final int idMisi;
  final String namaMisi;
  final String deskripsiMisi;
  final int poin;
  String statusMisi;
  final String tipeMisi;
  final bool isAutoGenerated;
  final String? parameterType;
  final double? targetValue;
  final bool autoCompleted;
  final DateTime? completedAt;
  final DateTime? expiresAt;
  final String expiryType; // 'daily' atau 'weekly'

  Misi({
    required this.idMisi,
    required this.namaMisi,
    required this.deskripsiMisi,
    required this.poin,
    required this.statusMisi,
    required this.tipeMisi,
    required this.isAutoGenerated,
    this.parameterType,
    this.targetValue,
    required this.autoCompleted,
    this.completedAt,
    this.expiresAt,
    required this.expiryType,
  });

  factory Misi.fromJson(Map<String, dynamic> json) {
    return Misi(
      idMisi: json['id_misi'],
      namaMisi: json['nama_misi'],
      deskripsiMisi: json['deskripsi_misi'],
      poin: json['poin'],
      statusMisi: json['status_misi'],
      tipeMisi: json['tipe_misi'],
      isAutoGenerated: json['is_auto_generated'] ?? false,
      parameterType: json['parameter_type'],
      targetValue: json['target_value'] != null ? double.parse(json['target_value'].toString()) : null,
      autoCompleted: json['auto_completed'] ?? false,
      completedAt: json['completed_at'] != null ? DateTime.parse(json['completed_at']) : null,
      expiresAt: json['expires_at'] != null ? DateTime.parse(json['expires_at']) : null,
      expiryType: json['expiry_type'] ?? 'daily',
    );
  }

  // Check if mission is expired
  bool get isExpired {
    if (expiresAt == null) return false;
    return DateTime.now().isAfter(expiresAt!);
  }

  // Check if mission should be hidden
  bool get shouldHide {
    // Hanya sembunyikan jika sudah completed DAN expired
    if (!isAutoGenerated && statusMisi != 'selesai') return false;
    if (isAutoGenerated && !autoCompleted) return false;
    return isExpired;
  }

  // Get expiry info text
  String get expiryInfo {
    if (expiresAt == null) return '';
    
    if (isExpired) {
      return 'Sudah kadaluarsa';
    }
    
    final now = DateTime.now();
    final difference = expiresAt!.difference(now);
    
    if (difference.inDays > 0) {
      return 'Kadaluarsa dalam ${difference.inDays} hari';
    } else if (difference.inHours > 0) {
      return 'Kadaluarsa dalam ${difference.inHours} jam';
    } else {
      return 'Kadaluarsa dalam ${difference.inMinutes} menit';
    }
  }

  // Get expiry type text
  String get expiryTypeText {
    return expiryType == 'weekly' ? 'Mingguan' : 'Harian';
  }
}